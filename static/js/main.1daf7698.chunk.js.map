{"version":3,"sources":["components/Calculator/Calculator.tsx","utils/CalcHelper.ts","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["ADIGIT","MAGIC","strToDigitArray","value","match","map","parseInt","sumIntArray","digits","reduce","prev","curr","formatDateWithAppend","res","join","parseDigits","split","r","v","index","substr","formatDate","endsWith","length","appendDot","useStyles","makeStyles","createStyles","smallContent","fontFamily","padding","overflow","fontSize","content","pageTitle","fontWeight","textAlign","button","background","primary","opacity","secondary","table","marginTop","marginBottom","width","border","paddingBottom","paddingTop","paddingLeft","paddingRight","smallTable","disableAlign","footer","color","textDecoration","note","defaultAdditionalDigits","FIRST","SECOND","THIRD","FOURTH","Calculator","useState","dateValue","setDateValue","isCalculated","setIsCalculated","additionalDigits","setAdditionalDigits","textAreaRef","useRef","isSmallScreen","useMemo","document","documentElement","clientWidth","additionalNumString","outBaseNum","num","calcBaseNum","toString","repeat","outComplexNum","classes","rifm","useRifm","onChange","newValue","format","append","calculateFate","calculateAdditionalDigits","additional1","additional2","additional3","additional4","outputValue","Grid","container","alignContent","className","direction","justify","item","xs","alignItems","spacing","TextField","placeholder","Button","onClick","disabled","size","md","cn","colSpan","INTEREST","LOGIC","LUCK","CHARACTER","HEALTH","ENERGY","DUTY","LABOR","MEMORY","inputRef","multiline","fullWidth","current","select","execCommand","rel","href","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1daf7698.chunk.js","sourcesContent":["import React, {useMemo, useRef, useState} from 'react';\nimport {makeStyles, createStyles} from '@material-ui/core/styles';\nimport {Grid, TextField, Button} from '@material-ui/core';\nimport {useRifm} from 'rifm';\nimport {appendDot, formatDateWithAppend, strToDigitArray, sumIntArray} from \"../../utils/CalcHelper\";\nimport cn from 'classnames';\n\n\nconst useStyles = makeStyles(() => createStyles({\n  smallContent: {\n    fontFamily: '\"Nunito\", sans-serif',\n    padding: 5,\n    overflow: 'hidden',\n    fontSize: 12,\n  },\n  content: {\n    fontFamily: '\"Nunito\", sans-serif',\n    fontSize: 14,\n    overflow: 'hidden'\n  },\n  pageTitle: {\n    fontWeight: 400,\n    textAlign: \"center\"\n  },\n  button: {\n    background: '#cecec6',\n  },\n  primary: {\n    background: '#e5ded3',\n\n    '&:disabled': {\n      opacity: 0.5\n    }\n  },\n  secondary: {\n    background: '#fbf8f2',\n  },\n  table: {\n    marginTop: 30,\n    marginBottom: 30,\n    fontSize: 18,\n    width: '100%',\n    '& td': {\n      textAlign: 'center',\n      border: '1px solid black',\n      width: '25%',\n      paddingBottom: '5%',\n      paddingTop: '5%',\n      paddingLeft: 10,\n      paddingRight: 10,\n    },\n  },\n  smallTable: {\n    marginTop: 20,\n    marginBottom: 20,\n    width: '100%',\n    fontSize: 10,\n\n    '& td': {\n      width: '25%',\n      padding: 5,\n      paddingBottom: 15,\n      paddingTop: 15,\n      textAlign: 'center',\n      border: '1px solid black',\n    }\n  },\n  disableAlign: {\n    // @ts-ignore\n    textAlign: 'left !important',\n    paddingLeft: '15px !important',\n  },\n  footer: {\n    marginTop: 30,\n    marginBottom: 25,\n    fontWeight: 400,\n    textAlign: 'center',\n    fontSize: 20,\n\n    '& a': {\n      color: '#6f97ff',\n      textDecoration: 'none',\n\n      '&:hover': {\n        color: '#6080ff'\n      }\n    }\n  },\n  note: {\n    fontSize: '0.8em',\n    marginTop: 5,\n  }\n\n}));\n\nenum ADIGIT {\n  FIRST,\n  SECOND,\n  THIRD,\n  FOURTH\n}\n\nenum MAGIC {\n  NULL,\n  CHARACTER,\n  ENERGY,\n  INTEREST,\n  HEALTH,\n  LOGIC,\n  LABOR,\n  LUCK,\n  DUTY,\n  MEMORY\n}\n\ntype AdditionalDigitsType = {\n  [key in ADIGIT]: number;\n};\n\nconst defaultAdditionalDigits: AdditionalDigitsType = {\n  [ADIGIT.FIRST]: 0,\n  [ADIGIT.SECOND]: 0,\n  [ADIGIT.THIRD]: 0,\n  [ADIGIT.FOURTH]: 0,\n};\n\nexport function Calculator() {\n  const [dateValue, setDateValue] = useState<string>('');\n  const [isCalculated, setIsCalculated] = useState<boolean>(false);\n  const [additionalDigits, setAdditionalDigits] = useState<AdditionalDigitsType>(defaultAdditionalDigits);\n  const textAreaRef = useRef(null);\n\n  const isSmallScreen = useMemo(() => document.documentElement.clientWidth < 960, []);\n\n  // Лень использовать билдер\n  const additionalNumString = useMemo(\n    () => `${strToDigitArray(dateValue)}${additionalDigits[ADIGIT.FIRST]}${additionalDigits[ADIGIT.SECOND]}${additionalDigits[ADIGIT.THIRD]}${additionalDigits[ADIGIT.FOURTH]}`,\n    [additionalDigits, dateValue]\n  );\n\n  const outBaseNum = (num: number): string => {\n    if (!isCalculated) {\n      return '-';\n    }\n\n    const length = calcBaseNum(num);\n\n    return length ? num.toString().repeat(length) : '-';\n  };\n\n  const outComplexNum = (num: number): string => {\n    if (!isCalculated) {\n      return '-';\n    }\n\n    return num.toString();\n  };\n\n  const calcBaseNum = (num: number): number => {\n    return additionalNumString.split(num.toString()).length - 1;\n  };\n\n  const classes = useStyles();\n\n  const onChange = (newValue: string) => {\n    setIsCalculated(false);\n    setDateValue(newValue);\n  };\n\n  const rifm = useRifm({\n    value: dateValue,\n    onChange,\n    format: formatDateWithAppend,\n    append: appendDot\n  });\n\n  const calculatePersonality = (): void => {\n    const digits = strToDigitArray(dateValue);\n\n    setAdditionalDigits(calculateAdditionalDigits(digits));\n\n    setIsCalculated(true);\n  };\n\n  const calculateFate = (): string => {\n    if (!isCalculated) {\n      return '';\n    }\n\n    let num = sumIntArray(strToDigitArray(dateValue));\n\n    while (num > 9 && num !== 11) {\n      num = sumIntArray(strToDigitArray(num.toString()))\n    }\n\n    return num.toString();\n  };\n\n  const calculateAdditionalDigits = (digits: number[]): AdditionalDigitsType => {\n    const additional1 = sumIntArray(digits);\n    const additional2 = sumIntArray(strToDigitArray(additional1.toString()));\n    const additional3 = additional1 - (2 * (digits[0] || digits[1]));\n    const additional4 = sumIntArray(strToDigitArray(additional3.toString()));\n\n    return {\n      [ADIGIT.FIRST]: additional1,\n      [ADIGIT.SECOND]: additional2,\n      [ADIGIT.THIRD]: additional3,\n      [ADIGIT.FOURTH]: additional4,\n    }\n  };\n\n  const calculateSummary = (): string => {\n    if (!isCalculated) {\n      return '-';\n    }\n\n    return `${outBaseNum(MAGIC.CHARACTER)}`\n    + `/${outBaseNum(MAGIC.ENERGY)}`\n    + `/${outBaseNum(MAGIC.INTEREST)}`\n    + `/${outBaseNum(MAGIC.HEALTH)}`\n    + `/${outBaseNum(MAGIC.LOGIC)}`\n    + `/${outBaseNum(MAGIC.LABOR)}`\n    + `/${outBaseNum(MAGIC.LUCK)}`\n    + `/${outBaseNum(MAGIC.DUTY)}`\n    + `/${outBaseNum(MAGIC.MEMORY)}`\n    + `/п${outComplexNum(calcBaseNum(MAGIC.INTEREST) + calcBaseNum(MAGIC.LOGIC) + calcBaseNum(MAGIC.LUCK))}`\n    + `/ц${outComplexNum(calcBaseNum(MAGIC.CHARACTER) + calcBaseNum(MAGIC.HEALTH) + calcBaseNum(MAGIC.LUCK))}`\n    + `/с${outComplexNum(calcBaseNum(MAGIC.ENERGY) + calcBaseNum(MAGIC.LOGIC) + calcBaseNum(MAGIC.DUTY))}`\n    + `/д${outComplexNum(calcBaseNum(MAGIC.HEALTH) + calcBaseNum(MAGIC.LOGIC) + calcBaseNum(MAGIC.LABOR))}`\n    + `/чжп${calculateFate()}`\n  };\n\n  const outputValue = (value: any) => (isCalculated ? value : '');\n\n  const copyResult = () => {\n    if (textAreaRef !== null) {\n      // @ts-ignore\n      textAreaRef.current.select();\n      document.execCommand('copy');\n    }\n  };\n\n  return (<Grid container alignContent=\"center\" className={classes.content}>\n    <Grid direction=\"row\" justify=\"center\" item xs={12} alignItems=\"center\">\n      <h1 className={classes.pageTitle}>Матрица личности</h1>\n    </Grid>\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={2}>\n      <Grid item>\n        <TextField\n          placeholder=\"ЧЧ.ММ.ГГГГ\"\n          value={rifm.value}\n          onChange={rifm.onChange}\n        />\n      </Grid>\n      <Grid item>\n        <Button\n          onClick={calculatePersonality}\n          disabled={dateValue.length < 10}\n          className={classes.button}\n          size=\"large\"\n        >\n          Рассчитать\n        </Button>\n      </Grid>\n    </Grid>\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n      <Grid item xs={12} md={5}>\n\n        <div>\n          <div>\n            <table className={\n              cn({\n                [classes.table]: !isSmallScreen,\n                [classes.smallTable]: isSmallScreen\n              })\n            }>\n              <thead>\n              <tr>\n                <td colSpan={3} className={`${classes.primary} ${classes.disableAlign}`}>\n                  <div>\n                    <span>Дата рождения: </span>\n                    {outputValue(dateValue)}</div>\n                  <div>\n                    <span>Дополнительные числа: </span>\n                    {outputValue(additionalDigits[ADIGIT.FIRST] + ', ')}\n                    {outputValue(additionalDigits[ADIGIT.SECOND] + ', ')}\n                    {outputValue(additionalDigits[ADIGIT.THIRD] + ', ')}\n                    {outputValue(additionalDigits[ADIGIT.FOURTH])}\n                  </div>\n                  <div>\n                    <span>Число жизненного пути: </span>\n                    {calculateFate()}\n                  </div>\n                </td>\n                <td className={classes.primary}>\n                  <div>Темперамент</div>\n                  {outComplexNum(calcBaseNum(MAGIC.INTEREST) + calcBaseNum(MAGIC.LOGIC) + calcBaseNum(MAGIC.LUCK))}\n                </td>\n              </tr>\n              </thead>\n              <tbody>\n              <tr>\n                <td className={classes.secondary}>\n                  <div>Характер</div>\n                  {outBaseNum(MAGIC.CHARACTER)}\n                </td>\n                <td className={classes.secondary}>\n                  <div>Здоровье</div>\n                  {outBaseNum(MAGIC.HEALTH)}\n                </td>\n                <td className={classes.secondary}>\n                  <div>Удача</div>\n                  {outBaseNum(MAGIC.LUCK)}\n                </td>\n                <td className={classes.primary}>\n                  <div>Цель</div>\n                  {outComplexNum(calcBaseNum(MAGIC.CHARACTER) + calcBaseNum(MAGIC.HEALTH) + calcBaseNum(MAGIC.LUCK))}\n                </td>\n              </tr>\n              <tr>\n                <td className={classes.secondary}>\n                  <div>Энергия</div>\n                  {outBaseNum(MAGIC.ENERGY)}\n                </td>\n                <td className={classes.secondary}>\n                  <div>Логика</div>\n                  {outBaseNum(MAGIC.LOGIC)}\n                </td>\n                <td className={classes.secondary}>\n                  <div>Долг</div>\n                  {outBaseNum(MAGIC.DUTY)}\n                </td>\n                <td className={classes.primary}>\n                  <div>Семья</div>\n                  {outComplexNum(calcBaseNum(MAGIC.ENERGY) + calcBaseNum(MAGIC.LOGIC) + calcBaseNum(MAGIC.DUTY))}\n                </td>\n              </tr>\n              <tr>\n                <td className={classes.secondary}>\n                  <div>Интерес</div>\n                  {outBaseNum(MAGIC.INTEREST)}\n                </td>\n                <td className={classes.secondary}>\n                  <div>Труд</div>\n                  {outBaseNum(MAGIC.LABOR)}\n                </td>\n                <td className={classes.secondary}>\n                  <div>Память</div>\n                  {outBaseNum(MAGIC.MEMORY)}\n                </td>\n                <td className={classes.primary}>\n                  <div>Привычки</div>\n                  {outComplexNum(calcBaseNum(MAGIC.INTEREST) + calcBaseNum(MAGIC.LABOR) + calcBaseNum(MAGIC.MEMORY))}\n                </td>\n              </tr>\n              <tr>\n                <td className={classes.secondary}>\n                </td>\n                <td className={classes.secondary}>\n                  <div>Быт</div>\n                  {outComplexNum(calcBaseNum(MAGIC.HEALTH) + calcBaseNum(MAGIC.LOGIC) + calcBaseNum(MAGIC.LABOR))}\n                </td>\n                <td className={classes.secondary}>\n                  {/*<div>Талант</div>*/}\n                  {/*{outComplexNum(calcBaseNum(MAGIC.LUCK) + calcBaseNum(MAGIC.DUTY) + calcBaseNum(MAGIC.MEMORY))}*/}\n                </td>\n                <td className={classes.primary}>\n                  {/*<div>Духовное</div>*/}\n                  {/*{outComplexNum(calcBaseNum(MAGIC.CHARACTER) + calcBaseNum(MAGIC.LOGIC) + calcBaseNum(MAGIC.MEMORY))}*/}\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <Grid item container xs={12}>\n          <Grid item xs={12} md={6}>\n            <TextField\n              inputRef={textAreaRef}\n              value={calculateSummary()}\n              multiline\n              fullWidth\n              disabled={!isCalculated}\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Button\n              fullWidth\n              className={classes.button}\n              disabled={!isCalculated}\n              onClick={copyResult}\n            >\n              Скопировать\n            </Button>\n          </Grid>\n          <Grid item xs={12}>\n            <div className={classes.note}>\n              *скопируйте эту строку и вставьте вместе со своим вопросом в специальное окно в сторис в рубрике «вопрос-ответ»\n            </div>\n          </Grid>\n          <Grid item xs={12}>\n            <div className={classes.footer}>\n              <a rel=\"noreferrer\" href=\"https://www.instagram.com/olga_kolagorova/\" target=\"_blank\">@olga_kolagorova</a>\n            </div>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  </Grid>);\n}\n","const parseDigits = (value: string): string => (value.match(/\\d+/g) || []).join('');\n\nexport const strToDigitArray = (value: string): number[] => value.match(/\\d/g)?.map((value: string) => parseInt(value, 10)) || [];\n\nexport const sumIntArray = (digits: number[]) => digits.reduce((prev: number, curr: number) => (prev + curr), 0);\n\nexport const formatDate = (value: string): string => {\n  const digits = parseDigits(value);\n  const chars = digits.split('');\n  return chars\n    .reduce(\n      (r: string, v: string, index: number) => (index === 2 || index === 4 ? `${r}.${v}` : `${r}${v}`),\n      ''\n    )\n    .substr(0, 10);\n};\n\nexport const formatDateWithAppend = (value: string): string => {\n  const res = formatDate(value);\n\n  if (value.endsWith('.')) {\n    if (res.length === 2) {\n      return `${res}.`;\n    }\n\n    if (res.length === 5) {\n      return `${res}.`;\n    }\n  }\n\n  return res;\n};\n\n\nexport const appendDot = (value: string): string => (value.length === 2 || value.length === 5 ? `${value}.` : value);\n","import React from 'react';\nimport './App.css';\nimport {Calculator} from \"../Calculator/Calculator\";\n\nfunction App() {\n  return (\n    <Calculator />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}